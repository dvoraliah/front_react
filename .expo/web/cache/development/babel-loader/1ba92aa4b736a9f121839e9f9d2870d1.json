{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CustomButton from \"../CustomButton\";\nimport { DataTable } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar optionsPerPage = [2, 3, 4];\n\nvar CustomTable = function CustomTable(_ref) {\n  var budgets = _ref.budgets,\n      idCategorie = _ref.idCategorie;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(optionsPerPage[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemsPerPage = _useState4[0],\n      setItemsPerPage = _useState4[1];\n\n  useEffect(function () {\n    setPage(0);\n  }, [itemsPerPage]);\n  return _jsxs(DataTable, {\n    children: [_jsxs(DataTable.Header, {\n      children: [_jsx(DataTable.Title, {\n        children: \"Suppr\"\n      }), _jsx(DataTable.Title, {\n        children: \"Achat\"\n      }), _jsx(DataTable.Title, {\n        children: \"Montant\"\n      }), _jsx(DataTable.Title, {\n        children: \"D\\xE9bit\\xE9\"\n      })]\n    }), budgets.map(function (budget) {\n      if (budget.field.field_category_id == idCategorie) {\n        console.log(budget);\n\n        if (budget) {} else {\n          console.log(\"pouet\");\n        }\n\n        return _jsx(_Fragment, {\n          children: _jsxs(DataTable.Row, {\n            children: [_jsx(DataTable.Cell, {\n              children: _jsx(CustomButton, {\n                onPress: function onPress() {\n                  console.warn(\"pouet\");\n                },\n                text: \"X\"\n              })\n            }, budget.id + \" delete\"), _jsx(DataTable.Cell, {\n              children: _jsx(CustomButton, {\n                onPress: function onPress() {\n                  console.warn(\"achat\");\n                },\n                text: budget.field.name,\n                type: \"SECONDARY\"\n              })\n            }, budget.id + budget.field_id), _jsx(DataTable.Cell, {\n              children: _jsx(CustomButton, {\n                onPress: function onPress() {\n                  console.warn(\"montant\");\n                },\n                text: budget.value,\n                type: \"SECONDARY\"\n              })\n            }, budget.id + budget.value), _jsx(DataTable.Cell, {\n              children: _jsx(CustomButton, {\n                onPress: function onPress() {\n                  console.warn(\"débité\");\n                },\n                text: budget.is_debited,\n                type: \"SECONDARY\"\n              })\n            }, budget.id + budget.is_debited)]\n          }, budget.id)\n        });\n      }\n    }), _jsx(DataTable.Pagination, {\n      page: page,\n      numberOfPages: 3,\n      onPageChange: function onPageChange(page) {\n        return setPage(page);\n      },\n      label: \"1-2 of 6\",\n      optionsPerPage: optionsPerPage,\n      itemsPerPage: itemsPerPage,\n      setItemsPerPage: setItemsPerPage,\n      showFastPagination: true,\n      optionsLabel: \"Rows per page\"\n    })]\n  });\n};\n\nexport default CustomTable;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    color: \"white\",\n    width: \"100%\",\n    borderColor: \"salmon\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5\n  },\n  container_PRIMARY: {\n    backgroundColor: \"salmon\"\n  },\n  container_SECONDARY: {\n    borderColor: \"salmon\",\n    borderWidth: 2\n  },\n  container_TERTIARY: {\n    borderWidth: 0\n  },\n  container_SOCIALCONNECT: {\n    borderWidth: 0\n  },\n  text: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    textTransform: \"uppercase\"\n  },\n  text_SECONDARY: {\n    color: \"salmon\"\n  },\n  text_TERTIARY: {\n    fontWeight: \"300\",\n    color: \"#e5e7e9\",\n    textTransform: \"none\",\n    fontStyle: \"italic\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","CustomButton","DataTable","optionsPerPage","CustomTable","budgets","idCategorie","page","setPage","itemsPerPage","setItemsPerPage","map","budget","field","field_category_id","console","log","warn","id","name","field_id","value","is_debited","styles","StyleSheet","create","container","alignItems","color","width","borderColor","borderWidth","borderRadius","padding","marginVertical","container_PRIMARY","backgroundColor","container_SECONDARY","container_TERTIARY","container_SOCIALCONNECT","text","fontWeight","textTransform","text_SECONDARY","text_TERTIARY","fontStyle"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/authentication/src/components/CustomTable/CustomTable.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { View, Text, TextInput, StyleSheet } from \"react-native\";\nimport CustomButton from \"../CustomButton\"\nimport { DataTable } from \"react-native-paper\";\n\nconst optionsPerPage = [2, 3, 4];\n\nconst CustomTable = ({ budgets, idCategorie}) => {\n  \n  // console.log(idCategorie)\n  const [page, setPage] = useState(0);\n  const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\n\n  useEffect(() => {\n    setPage(0);\n  }, [itemsPerPage]);\n\n  \n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title>Suppr</DataTable.Title>\n        {/* <DataTable.Title>Date</DataTable.Title> */}\n        <DataTable.Title>Achat</DataTable.Title>\n\n        <DataTable.Title>Montant</DataTable.Title>\n\n        <DataTable.Title>Débité</DataTable.Title>\n      </DataTable.Header>\n\n        {budgets.map((budget) => {\n          if(budget.field.field_category_id == idCategorie){\n            console.log(budget)\n            if(budget){\n              \n            }\n            else {\n              console.log(\"pouet\")\n            }\n            return (\n              <>\n                <DataTable.Row key={budget.id}>\n                  <DataTable.Cell key={budget.id + \" delete\"}>\n                    <CustomButton\n                      onPress={() => {\n                        console.warn(\"pouet\");\n                      }}\n                      text={\"X\"}\n                    // type={\"TERTIARY\"}\n                    />\n                  </DataTable.Cell>\n                  {/* <DataTable.Cell key={budget.id + budget.created_at}>\n                  Date\n                </DataTable.Cell> */}\n                  <DataTable.Cell key={budget.id + budget.field_id}>\n                    <CustomButton\n                      onPress={() => {\n                        console.warn(\"achat\");\n                      }}\n                      text={budget.field.name}\n                      type={\"SECONDARY\"}\n                    />\n                  </DataTable.Cell>\n                  <DataTable.Cell key={budget.id + budget.value}>\n                    <CustomButton\n                      onPress={() => {\n                        console.warn(\"montant\");\n                      }}\n                      text={budget.value}\n                      type={\"SECONDARY\"}\n                    />\n                  </DataTable.Cell>\n                  <DataTable.Cell key={budget.id + budget.is_debited}>\n                    <CustomButton\n                      onPress={() => {\n                        console.warn(\"débité\");\n                      }}\n                      text={budget.is_debited}\n                      type={\"SECONDARY\"}\n                    />\n                  </DataTable.Cell>\n                </DataTable.Row>\n              </>\n            );\n          }\n          \n          \n        })}\n        \n      \n      <DataTable.Pagination\n        page={page}\n        numberOfPages={3}\n        onPageChange={(page) => setPage(page)}\n        label=\"1-2 of 6\"\n        optionsPerPage={optionsPerPage}\n        itemsPerPage={itemsPerPage}\n        setItemsPerPage={setItemsPerPage}\n        showFastPagination\n        optionsLabel={\"Rows per page\"}\n      />\n    </DataTable>\n  );\n};\nexport default CustomTable;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    color: \"white\",\n    width: \"100%\",\n    borderColor: \"salmon\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5,\n  },\n\n  container_PRIMARY: {\n    backgroundColor: \"salmon\",\n  },\n  container_SECONDARY: {\n    borderColor: \"salmon\",\n    borderWidth: 2,\n  },\n\n  container_TERTIARY: {\n    borderWidth: 0,\n  },\n  container_SOCIALCONNECT: {\n    borderWidth: 0,\n  },\n\n  text: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    textTransform: \"uppercase\",\n  },\n  text_SECONDARY: {\n    color: \"salmon\",\n  },\n\n  text_TERTIARY: {\n    fontWeight: \"300\",\n    color: \"#e5e7e9\",\n    textTransform: \"none\",\n    fontStyle: \"italic\",\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}