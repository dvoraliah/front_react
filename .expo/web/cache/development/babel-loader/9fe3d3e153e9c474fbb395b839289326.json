{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { DB_PATH } from \"../services/env\";\n\nvar _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n\nexport { token, setToken };\nexport var login = function login(email, password, chemin) {\n  axios({\n    method: \"post\",\n    url: DB_PATH + chemin,\n    data: {\n      email: email,\n      password: password\n    }\n  }).then(function (response) {\n    response.status == 201 ? saveToken(response.data.token) : {};\n  });\n};","map":{"version":3,"names":["useState","axios","DB_PATH","token","setToken","login","email","password","chemin","method","url","data","then","response","status","saveToken"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/native/authentication/src/services/ConnectAPI.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport axios from \"axios\";\nimport { DB_PATH } from \"../services/env\"\n\nexport const [token, setToken] = useState(\"\");\n\nexport const login = (email, password, chemin) => {\n    \n\n    axios({\n        method: \"post\",\n        url: DB_PATH + chemin,\n        data: {\n            email: email,\n            password: password,\n        },\n        }).then((response) => {\n        //Si la response à la requête est acceptée par l'API, l'utilisateur est redirigé vers la page d'accueil.\n        // console.warn(state)\n        response.status == 201\n            ? saveToken(\n                response.data.token\n            ) /* navigation.navigate('Home', {\n                    token : response.data.token,\n                })  */\n            : {};\n    });\n}\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT;;AAEO,gBAA0BF,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,IAAOG,KAAP;AAAA,IAAcC,QAAd;;;AAEP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,EAA6B;EAG9CP,KAAK,CAAC;IACFQ,MAAM,EAAE,MADN;IAEFC,GAAG,EAAER,OAAO,GAAGM,MAFb;IAGFG,IAAI,EAAE;MACFL,KAAK,EAAEA,KADL;MAEFC,QAAQ,EAAEA;IAFR;EAHJ,CAAD,CAAL,CAOOK,IAPP,CAOY,UAACC,QAAD,EAAc;IAGtBA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,GACMC,SAAS,CACPF,QAAQ,CAACF,IAAT,CAAcR,KADP,CADf,GAMM,EANN;EAOH,CAjBD;AAkBH,CArBM"},"metadata":{},"sourceType":"module"}