{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CustomButton from \"../CustomButton\";\nimport { DataTable } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar optionsPerPage = [2, 3, 4];\n\nvar CustomTable = function _callee(_ref) {\n  var budgets, idCategorie, _useState, _useState2, page, setPage, _useState3, _useState4, itemsPerPage, setItemsPerPage;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          budgets = _ref.budgets, idCategorie = _ref.idCategorie;\n          _useState = useState(0), _useState2 = _slicedToArray(_useState, 2), page = _useState2[0], setPage = _useState2[1];\n          _useState3 = useState(optionsPerPage[0]), _useState4 = _slicedToArray(_useState3, 2), itemsPerPage = _useState4[0], setItemsPerPage = _useState4[1];\n          useEffect(function () {\n            setPage(0);\n          }, [itemsPerPage]);\n          return _context.abrupt(\"return\", _jsxs(DataTable, {\n            children: [_jsxs(DataTable.Header, {\n              children: [_jsx(DataTable.Title, {\n                children: \"Achat\"\n              }), _jsx(DataTable.Title, {\n                numeric: true,\n                children: \"Montant\"\n              }), _jsx(DataTable.Title, {\n                numeric: true,\n                children: \"D\\xE9bit\\xE9\"\n              }), _jsx(DataTable.Title, {\n                numeric: true,\n                children: \"Suppr\"\n              })]\n            }), budgets.map(function (budget) {\n              if (budget.field.field_category_id == idCategorie) {\n                console.log(budget);\n                return _jsx(_Fragment, {\n                  children: _jsxs(DataTable.Row, {\n                    children: [_jsx(DataTable.Cell, {\n                      textStyle: styles.align,\n                      children: _jsx(CustomButton, {\n                        onPress: function onPress() {\n                          console.warn(\"achat\");\n                        },\n                        text: budget.field.name,\n                        type: \"CELL\"\n                      })\n                    }, budget.id + budget.field_id), _jsx(DataTable.Cell, {\n                      numeric: true,\n                      children: _jsx(CustomButton, {\n                        onPress: function onPress() {\n                          console.warn(\"montant\");\n                        },\n                        text: budget.value,\n                        type: \"CELL\"\n                      })\n                    }, budget.id + budget.value), _jsx(DataTable.Cell, {\n                      numeric: true,\n                      children: _jsx(CustomButton, {\n                        onPress: function onPress() {\n                          console.warn(\"débité\");\n                        },\n                        text: budget.is_debited,\n                        type: \"CELL\"\n                      })\n                    }, budget.id + budget.is_debited), _jsx(DataTable.Cell, {\n                      numeric: true,\n                      children: _jsx(CustomButton, {\n                        onPress: function onPress() {\n                          console.warn(\"pouet\");\n                        },\n                        text: \"X\"\n                      })\n                    }, budget.id + \" delete\")]\n                  }, budget.id)\n                });\n              }\n            }), _jsxs(DataTable.Row, {\n              children: [_jsx(DataTable.Cell, {\n                numeric: true\n              }), _jsx(DataTable.Cell, {\n                children: _jsx(CustomButton, {\n                  onPress: function onPress() {\n                    console.warn(\"New\");\n                  },\n                  text: \"Nouvelle entrée\"\n                })\n              }), _jsx(DataTable.Cell, {\n                numeric: true\n              })]\n            }), _jsx(DataTable.Pagination, {\n              page: page,\n              numberOfPages: 3,\n              onPageChange: function onPageChange(page) {\n                return setPage(page);\n              },\n              label: \"1-2 of 6\",\n              optionsPerPage: optionsPerPage,\n              itemsPerPage: itemsPerPage,\n              setItemsPerPage: setItemsPerPage,\n              showFastPagination: true,\n              optionsLabel: \"Rows per page\"\n            })]\n          }));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default CustomTable;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    color: \"white\",\n    width: \"100%\",\n    borderColor: \"salmon\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5\n  },\n  center_cell: {\n    color: \"black\",\n    fontStyle: \"italic\"\n  },\n  align: {\n    marginTop: 20,\n    height: '150%'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","CustomButton","DataTable","optionsPerPage","CustomTable","budgets","idCategorie","page","setPage","itemsPerPage","setItemsPerPage","map","budget","field","field_category_id","console","log","styles","align","warn","name","id","field_id","value","is_debited","StyleSheet","create","container","alignItems","color","width","borderColor","borderWidth","borderRadius","padding","marginVertical","center_cell","fontStyle","marginTop","height"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/authentication/src/components/CustomTable/CustomTable.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { View, Text, TextInput, StyleSheet } from \"react-native\";\nimport CustomButton from \"../CustomButton\"\nimport { DataTable } from \"react-native-paper\";\n// import { USER_ID } from \"../../services/env\";\n\nconst optionsPerPage = [2, 3, 4];\n\nconst CustomTable = async ({ budgets, idCategorie}) => {\n  // const user_id = await USER_ID;\n  // console.log(USER_ID)\n  const [page, setPage] = useState(0);\n  const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\n\n  useEffect(() => {\n    setPage(0);\n  }, [itemsPerPage]);\n\n  \n  return (\n    <DataTable>\n      <DataTable.Header>\n        {/* <DataTable.Title>Date</DataTable.Title> */}\n        <DataTable.Title>Achat</DataTable.Title>\n\n        <DataTable.Title numeric>Montant</DataTable.Title>\n\n        <DataTable.Title numeric>Débité</DataTable.Title>\n\n        <DataTable.Title numeric>Suppr</DataTable.Title>\n      </DataTable.Header>\n\n      {budgets.map((budget) => {\n        if (budget.field.field_category_id == idCategorie) {\n          console.log(budget);\n          return (\n            <>\n              <DataTable.Row key={budget.id}>\n                <DataTable.Cell\n                  textStyle={styles.align}\n                  key={budget.id + budget.field_id}\n                >\n                  <CustomButton\n                    onPress={() => {\n                      console.warn(\"achat\");\n                    }}\n                    text={budget.field.name}\n                    type={\"CELL\"}\n                  />\n                </DataTable.Cell>\n                <DataTable.Cell key={budget.id + budget.value} numeric>\n                  <CustomButton\n                    onPress={() => {\n                      console.warn(\"montant\");\n                    }}\n                    text={budget.value}\n                    type={\"CELL\"}\n                  />\n                </DataTable.Cell>\n                <DataTable.Cell key={budget.id + budget.is_debited} numeric>\n                  <CustomButton\n                    onPress={() => {\n                      console.warn(\"débité\");\n                    }}\n                    text={budget.is_debited}\n                    type={\"CELL\"}\n                  />\n                </DataTable.Cell>\n                <DataTable.Cell key={budget.id + \" delete\"} numeric>\n                  <CustomButton\n                    onPress={() => {\n                      console.warn(\"pouet\");\n                    }}\n                    text={\"X\"}\n                    // type={\"CELL\"}\n                  />\n                </DataTable.Cell>\n              </DataTable.Row>\n            </>\n          );\n        }\n      })}\n\n      <DataTable.Row>\n        <DataTable.Cell numeric></DataTable.Cell>\n        <DataTable.Cell>\n          <CustomButton\n            onPress={() => {\n              console.warn(\"New\");\n            }}\n            text={\"Nouvelle entrée\"}\n          />\n        </DataTable.Cell>\n        <DataTable.Cell numeric></DataTable.Cell>\n      </DataTable.Row>\n\n      <DataTable.Pagination\n        page={page}\n        numberOfPages={3}\n        onPageChange={(page) => setPage(page)}\n        label=\"1-2 of 6\"\n        optionsPerPage={optionsPerPage}\n        itemsPerPage={itemsPerPage}\n        setItemsPerPage={setItemsPerPage}\n        showFastPagination\n        optionsLabel={\"Rows per page\"}\n      />\n    </DataTable>\n  );\n};\nexport default CustomTable;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    color: \"white\",\n    width: \"100%\",\n    borderColor: \"salmon\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5,\n  },\n  center_cell: {\n    color: \"black\",\n    fontStyle: \"italic\"\n  },\n  align: {\n    marginTop: 20,\n    height: '150%',\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}