{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Logo from \"../../../assets/images/orgabudLogo.png\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignInScreen = function SignInScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height;\n\n  var onSignInPress = function onSignInPress() {\n    console.warn('Connecté');\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(Image, {\n      source: Logo,\n      style: [styles.logo, {\n        height: height * 0.3\n      }],\n      resizeMode: \"contain\"\n    }), _jsx(CustomInput, {\n      placeholder: \"Email\",\n      value: username,\n      setValue: setUsername,\n      secureTextEntry: false\n    }), _jsx(CustomInput, {\n      placeholder: \"Mot de Passe\",\n      value: password,\n      setValue: setPassword,\n      secureTextEntry: true\n    }), _jsx(CustomButton, {\n      onPress: onSignInPress,\n      text: \"Se connecter\"\n    }), _jsx(CustomButton, {\n      onPress: onSignInPress,\n      text: \"Mot de passe oublié ? \"\n    })]\n  });\n};\n\nexport default SignInScreen;\nvar styles = StyleSheet.create({\n  root: {\n    padding: 10\n  },\n  logo: {\n    width: '60%',\n    maxWidth: 200,\n    height: '60%',\n    maxHeight: 200,\n    marginBottom: 50\n  }\n});","map":{"version":3,"names":["React","useState","Logo","CustomInput","CustomButton","SignInScreen","username","setUsername","password","setPassword","useWindowDimensions","height","onSignInPress","console","warn","styles","root","logo","StyleSheet","create","padding","width","maxWidth","maxHeight","marginBottom"],"sources":["/Applications/MAMP/htdocs/native/authentication/src/screens/SignInScreen/SignInScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, Image, StyleSheet, useWindowDimensions } from 'react-native'\nimport Logo from '../../../assets/images/orgabudLogo.png'\nimport CustomInput from '../../components/CustomInput/CustomInput'\nimport CustomButton from '../../components/CustomButton/CustomButton'\n\nconst SignInScreen = () => {\n    const [username, setUsername]= useState('');\n    const [password, setPassword] = useState('');\n    const {height} = useWindowDimensions();\n    const onSignInPress = () => {\n        console.warn('Connecté');\n    }\n    return (\n      <View style={styles.root}>\n        <Image\n          source={Logo}\n          style={[styles.logo, { height: height * 0.3 }]}\n          resizeMode=\"contain\"\n        />\n        <CustomInput\n          placeholder={\"Email\"}\n          value={username}\n          setValue={setUsername}\n          secureTextEntry={false}\n        />\n        <CustomInput\n          placeholder={\"Mot de Passe\"}\n          value={password}\n          setValue={setPassword}\n          secureTextEntry={true}\n        />\n        <CustomButton onPress={onSignInPress} text={\"Se connecter\"} />\n\n        <CustomButton onPress={onSignInPress} text={\"Mot de passe oublié ? \"} />\n      </View>\n    );\n}\n\nexport default SignInScreen\n\nconst styles = StyleSheet.create({\n    root:{\n        padding: 10\n    },\n    logo: {\n        width : '60%',\n        maxWidth: 200,\n        height: '60%',\n        maxHeight : 200,\n        marginBottom: 50,\n    },\n});"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;EACvB,gBAA+BJ,QAAQ,CAAC,EAAD,CAAvC;EAAA;EAAA,IAAOK,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAAgCN,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOO,QAAP;EAAA,IAAiBC,WAAjB;;EACA,2BAAiBC,mBAAmB,EAApC;EAAA,IAAOC,MAAP,wBAAOA,MAAP;;EACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IACxBC,OAAO,CAACC,IAAR,CAAa,UAAb;EACH,CAFD;;EAGA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,IAApB;IAAA,WACE,KAAC,KAAD;MACE,MAAM,EAAEd,IADV;MAEE,KAAK,EAAE,CAACa,MAAM,CAACE,IAAR,EAAc;QAAEN,MAAM,EAAEA,MAAM,GAAG;MAAnB,CAAd,CAFT;MAGE,UAAU,EAAC;IAHb,EADF,EAME,KAAC,WAAD;MACE,WAAW,EAAE,OADf;MAEE,KAAK,EAAEL,QAFT;MAGE,QAAQ,EAAEC,WAHZ;MAIE,eAAe,EAAE;IAJnB,EANF,EAYE,KAAC,WAAD;MACE,WAAW,EAAE,cADf;MAEE,KAAK,EAAEC,QAFT;MAGE,QAAQ,EAAEC,WAHZ;MAIE,eAAe,EAAE;IAJnB,EAZF,EAkBE,KAAC,YAAD;MAAc,OAAO,EAAEG,aAAvB;MAAsC,IAAI,EAAE;IAA5C,EAlBF,EAoBE,KAAC,YAAD;MAAc,OAAO,EAAEA,aAAvB;MAAsC,IAAI,EAAE;IAA5C,EApBF;EAAA,EADF;AAwBH,CA/BD;;AAiCA,eAAeP,YAAf;AAEA,IAAMU,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC7BH,IAAI,EAAC;IACDI,OAAO,EAAE;EADR,CADwB;EAI7BH,IAAI,EAAE;IACFI,KAAK,EAAG,KADN;IAEFC,QAAQ,EAAE,GAFR;IAGFX,MAAM,EAAE,KAHN;IAIFY,SAAS,EAAG,GAJV;IAKFC,YAAY,EAAE;EALZ;AAJuB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}