{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CustomButton from \"../../components/CustomButton\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { API, USER_TOKEN } from \"../../services/env\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var route = _ref.route;\n  var username = route.params.username;\n  var monthString = [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"];\n\n  var _useState = useState(new Date().getMonth()),\n      _useState2 = _slicedToArray(_useState, 2),\n      actualMonth = _useState2[0],\n      setMonth = _useState2[1];\n\n  var _useState3 = useState(new Date().getFullYear()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      actualYear = _useState4[0],\n      setYear = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataCategories = _useState6[0],\n      setDataCategories = _useState6[1];\n\n  var navigation = useNavigation();\n  var URI = API + \"categories\";\n\n  var goBackSignPress = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            AsyncStorage.setItem('token', \"\");\n            AsyncStorage.setItem(\"user_id\", \"\");\n            navigation.navigate(\"SignIn\");\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var categorieOnPress = function categorieOnPress(name, slug, id) {\n    navigation.navigate(\"Categorie\", {\n      categorieName: name,\n      slug: slug,\n      categorieId: id\n    });\n  };\n\n  var getCategories = function _callee2() {\n    var token, response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 2:\n            token = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(axios({\n              method: \"get\",\n              url: URI,\n              headers: {\n                Authorization: \"Bearer \" + token\n              }\n            }).catch(function (error) {\n              console.log(error);\n            }).then(function (response) {\n              setDataCategories(response.data);\n            }));\n\n          case 5:\n            response = _context2.sent;\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getCategories();\n  }, []);\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsxs(Text, {\n      style: {\n        fontSize: 24,\n        alignContent: \"center\"\n      },\n      children: [\"Bienvenue \", username]\n    }), _jsx(CustomButton, {\n      onPress: goBackSignPress,\n      text: \"Déconnexion\"\n    }), _jsx(Text, {\n      style: {\n        fontSize: 20,\n        alignContent: \"center\"\n      },\n      children: \"Cat\\xE9gories\"\n    }), dataCategories.map(function (categorie) {\n      if (categorie.slug == \"resume\") {\n        return _jsx(CustomButton, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Resume\");\n          },\n          text: categorie.name + \" \" + monthString[actualMonth] + \" \" + actualYear,\n          fgColor: \"#5b712c\",\n          type: \"RESUME\"\n        }, categorie.slug.toString());\n      }\n    }), dataCategories.map(function (categorie) {\n      if (categorie.slug != \"resume\") {\n        return _jsx(CustomButton, {\n          onPress: function onPress() {\n            return categorieOnPress(categorie.name, categorie.slug, categorie.id);\n          },\n          text: categorie.name\n        }, categorie.slug.toString());\n      }\n    })]\n  });\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  root: {\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","CustomButton","useNavigation","API","USER_TOKEN","axios","AsyncStorage","HomeScreen","route","username","params","monthString","Date","getMonth","actualMonth","setMonth","getFullYear","actualYear","setYear","dataCategories","setDataCategories","navigation","URI","goBackSignPress","setItem","navigate","categorieOnPress","name","slug","id","categorieName","categorieId","getCategories","getItem","token","method","url","headers","Authorization","catch","error","console","log","then","response","data","styles","root","fontSize","alignContent","map","categorie","toString","StyleSheet","create","padding"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/authentication/src/screens/HomeScreen/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport CustomButton from \"../../components/CustomButton\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { API, USER_TOKEN } from \"../../services/env\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n\nconst HomeScreen = ({route }) => {\n  const { username } = route.params;\n  const monthString = [\n    \"janvier\",\n    \"février\",\n    \"mars\",\n    \"avril\",\n    \"mai\",\n    \"juin\",\n    \"juillet\",\n    \"août\",\n    \"septembre\",\n    \"octobre\",\n    \"novembre\",\n    \"décembre\",\n  ];\n  const [actualMonth, setMonth] = useState(new Date().getMonth());\n  const [actualYear, setYear] = useState(new Date().getFullYear());\n  const [dataCategories, setDataCategories] = useState([]);\n  const navigation = useNavigation();\n  const URI = API + \"categories\"\n  const goBackSignPress = async () => {\n    AsyncStorage.setItem('token', \"\")\n    AsyncStorage.setItem(\"user_id\", \"\");\n    navigation.navigate(\"SignIn\")\n  };\n  const categorieOnPress = (name, slug, id) => {\n    navigation.navigate(\"Categorie\", {\n      categorieName: name, slug: slug, categorieId : id\n    });\n  }\n  \n  const getCategories = async() => {\n    const token = await AsyncStorage.getItem(\"token\");\n    \n    const response = await axios({\n      method: \"get\",\n      url: URI,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).catch(function (error) {\n      console.log(error);\n    }).then(function(response){\n      setDataCategories(response.data)\n    });\n    \n  }\n  \n  // getToken()\n  useEffect(() => {\n    getCategories()\n  }, [])\n  \n    return (\n      <View style={styles.root}>\n        <Text style={{ fontSize: 24, alignContent: \"center\" }}>\n          Bienvenue {username}\n\n        </Text>\n        <CustomButton onPress={goBackSignPress} text={\"Déconnexion\"} />\n        <Text style={{ fontSize: 20, alignContent: \"center\" }}>Catégories</Text>\n\n        {\n        dataCategories.map((categorie) => {\n          if(categorie.slug == \"resume\"){\n            return (\n              <CustomButton\n                key={categorie.slug.toString()}\n                onPress={() =>\n                  navigation.navigate(\"Resume\")\n                }\n                text={categorie.name +\" \"+ monthString[actualMonth] + \" \" + actualYear}\n                fgColor=\"#5b712c\"\n                type=\"RESUME\"\n              />\n            );\n          }\n              \n        })}\n        {dataCategories.map((categorie) => {\n          if(categorie.slug != \"resume\"){\n            return (\n              <CustomButton\n                key={categorie.slug.toString()}\n                onPress={() =>\n                  categorieOnPress(categorie.name, categorie.slug, categorie.id)\n                }\n                text={categorie.name}\n              />\n            );\n          }\n              \n        })}\n      </View>\n    );\n}\n\nexport default HomeScreen\nconst styles = StyleSheet.create({\n  root: {\n    padding: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}