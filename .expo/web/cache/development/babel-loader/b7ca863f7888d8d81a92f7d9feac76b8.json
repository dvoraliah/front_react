{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport CustomInput from \"../../components/CustomInput\";\nimport CustomButton from \"../../components/CustomButton\";\nimport Checkbox from \"expo-checkbox\";\nimport DatePicker from \"react-native-datepicker\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { API } from \"../../services/env\";\nimport axios from \"axios\";\nimport CustomRedirectAlert from \"../../components/CustomRedirectAlert\";\nimport CustomPicker from \"../../components/CustomPicker/CustomPicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NewEntryBudgetScreen = function NewEntryBudgetScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isChecked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      categoriesList = _useState6[0],\n      setCategoriesList = _useState6[1];\n\n  var recupCategories = function _callee(arg) {\n    var token, URI, response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(USER_TOKEN);\n\n          case 2:\n            token = _context.sent;\n            URI = API + \"/fields\";\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios({\n              method: \"get\",\n              url: URI,\n              headers: {\n                Authorization: \"Bearer 1|aIU9qWxRucCX07iauIygbsN24g1dhJjjdwduORhH\"\n              }\n            }).then(function (response) {\n              SETFIELDS(response.data.champs);\n            }));\n\n          case 6:\n            response = _context.sent;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Formulair de nouvelle entr\\xE9e budget\"\n      }), _jsx(CustomPicker, {\n        list: [{\n          label: \"Tes\",\n          value: \"apple\"\n        }, {\n          label: \"Banana\",\n          value: \"banana\"\n        }]\n      }), _jsx(CustomInput, {\n        placeholder: \"Nom du Champs\",\n        value: \"\",\n        setValue: \"\"\n      }), _jsx(CustomInput, {\n        placeholder: \"Montant\",\n        value: \"\",\n        setValue: \"\"\n      }), _jsx(Text, {\n        style: styles.labelDate,\n        children: \"Date de D\\xE9pense\"\n      }), _jsx(DatePicker, {\n        style: styles.datePickerStyle,\n        date: date,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"DD-MM-YYYY\",\n        confirmBtnText: \"Ok\",\n        cancelBtnText: \"Annuler\",\n        customStyles: {\n          dateIcon: {\n            position: \"absolute\",\n            left: 0,\n            marginLeft: 0\n          },\n          dateInput: {\n            marginLeft: 36\n          }\n        },\n        onDateChange: function onDateChange(date) {\n          setDate(date);\n        }\n      }), _jsx(Text, {\n        style: styles.labelDate,\n        children: \"Date de pr\\xE9vue du d\\xE9bit\"\n      }), _jsx(DatePicker, {\n        style: styles.datePickerStyle,\n        date: date,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"DD-MM-YYYY\",\n        confirmBtnText: \"Ok\",\n        cancelBtnText: \"Annuler\",\n        customStyles: {\n          dateIcon: {\n            position: \"absolute\",\n            left: 0,\n            marginLeft: 0\n          },\n          dateInput: {\n            marginLeft: 36\n          }\n        },\n        onDateChange: function onDateChange(date) {\n          setDate(date);\n        }\n      }), _jsx(Checkbox, {\n        style: styles.checkbox,\n        value: isChecked,\n        onValueChange: setChecked,\n        color: isChecked ? \"green\" : undefined\n      }), _jsx(Text, {\n        style: styles.checkboxLabel,\n        children: \"D\\xE9bit\\xE9\"\n      }), _jsx(CustomButton, {\n        onPress: \"\",\n        text: \"Ajouter au budget\"\n      }), _jsx(CustomButton, {\n        onPress: \"\",\n        text: \"Retour à la connexion\",\n        type: \"TERTIARY\"\n      })]\n    })\n  });\n};\n\nexport default NewEntryBudgetScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    padding: 20\n  },\n  datePickerStyle: {\n    width: 200,\n    marginTop: 20\n  },\n  labelDate: {\n    fontWeight: \"normal\",\n    color: \"grey\",\n    marginTop: 5,\n    marginBottom: 5\n  },\n  checkbox: {\n    marginTop: 10,\n    marginLeft: 15\n  },\n  checkboxLabel: {\n    marginTop: 2,\n    marginLeft: 5\n  }\n});","map":{"version":3,"names":["React","useState","CustomInput","CustomButton","Checkbox","DatePicker","useNavigation","API","axios","CustomRedirectAlert","CustomPicker","NewEntryBudgetScreen","isChecked","setChecked","Date","date","setDate","categoriesList","setCategoriesList","recupCategories","arg","USER_TOKEN","token","URI","method","url","headers","Authorization","then","response","SETFIELDS","data","champs","label","value","styles","labelDate","datePickerStyle","dateIcon","position","left","marginLeft","dateInput","checkbox","undefined","checkboxLabel","StyleSheet","create","container","flex","padding","justifyContent","alignItems","title","textAlign","fontSize","fontWeight","width","marginTop","color","marginBottom"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/authentication/src/screens/NewEntryBudgetScreen/NewEntryBudgetScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, StyleSheet, ScrollView, Button } from \"react-native\";\nimport CustomInput from \"../../components/CustomInput\";\nimport CustomButton from \"../../components/CustomButton\";\nimport Checkbox from \"expo-checkbox\";\nimport DatePicker from \"react-native-datepicker\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { API } from \"../../services/env\";\nimport axios from \"axios\";\nimport CustomRedirectAlert from \"../../components/CustomRedirectAlert\";\nimport CustomPicker from \"../../components/CustomPicker/CustomPicker\";\n\nconst NewEntryBudgetScreen = () => {\n    const [isChecked, setChecked] = useState(false);\n    const [date, setDate] = useState(new Date());\n    const [categoriesList, setCategoriesList] = useState([]);\n\n    const recupCategories = async (arg) => {\n      const token = await USER_TOKEN;\n      const URI = API + \"/fields\";\n      const response = await axios({\n        method: \"get\",\n        url: URI,\n        headers: {\n        //   Authorization: `Bearer ${token}`,\n            Authorization : `Bearer 1|aIU9qWxRucCX07iauIygbsN24g1dhJjjdwduORhH`,\n        },\n      }).then(function (response) {\n        SETFIELDS(response.data.champs);\n      });\n    };\n\n    return (\n      <ScrollView>\n        <View>\n          <Text>Formulair de nouvelle entrée budget</Text>\n          <CustomPicker\n            list={[\n              { label: \"Tes\", value: \"apple\" },\n              { label: \"Banana\", value: \"banana\" },\n            ]}\n          />\n          <CustomInput placeholder={\"Nom du Champs\"} value={\"\"} setValue={\"\"} />\n          <CustomInput placeholder={\"Montant\"} value={\"\"} setValue={\"\"} />\n          <Text style={styles.labelDate}>Date de Dépense</Text>\n          <DatePicker\n            style={styles.datePickerStyle}\n            date={date} //initial date from state\n            mode=\"date\" //The enum of date, datetime and time\n            placeholder=\"select date\"\n            format=\"DD-MM-YYYY\"\n            confirmBtnText=\"Ok\"\n            cancelBtnText=\"Annuler\"\n            customStyles={{\n              dateIcon: {\n                // display: 'none',\n                position: \"absolute\",\n                left: 0,\n                // top: 4,\n                marginLeft: 0,\n              },\n              dateInput: {\n                marginLeft: 36,\n              },\n            }}\n            onDateChange={(date) => {\n              setDate(date);\n            }}\n          />\n          <Text style={styles.labelDate}>Date de prévue du débit</Text>\n          <DatePicker\n            style={styles.datePickerStyle}\n            date={date} //initial date from state\n            mode=\"date\" //The enum of date, datetime and time\n            placeholder=\"select date\"\n            format=\"DD-MM-YYYY\"\n            confirmBtnText=\"Ok\"\n            cancelBtnText=\"Annuler\"\n            customStyles={{\n              dateIcon: {\n                // display: 'none',\n                position: \"absolute\",\n                left: 0,\n                // top: 4,\n                marginLeft: 0,\n              },\n              dateInput: {\n                marginLeft: 36,\n              },\n            }}\n            onDateChange={(date) => {\n              setDate(date);\n            }}\n          />\n\n          <Checkbox\n            style={styles.checkbox}\n            value={isChecked}\n            onValueChange={setChecked}\n            color={isChecked ? \"green\" : undefined}\n          />\n          <Text style={styles.checkboxLabel}>Débité</Text>\n          <CustomButton onPress={\"\"} text={\"Ajouter au budget\"} />\n\n          <CustomButton\n            onPress={\"\"}\n            text={\"Retour à la connexion\"}\n            type=\"TERTIARY\"\n          />\n        </View>\n      </ScrollView>\n    );\n}\n\nexport default NewEntryBudgetScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    padding: 20,\n  },\n  datePickerStyle: {\n    width: 200,\n    marginTop: 20,\n  },\n  labelDate: {\n    fontWeight: \"normal\",\n    color: \"grey\",\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  checkbox: {\n    marginTop: 10,\n    marginLeft: 15,\n  },\n  checkboxLabel :{\n      marginTop: 2,\n      marginLeft: 5,\n  }\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}