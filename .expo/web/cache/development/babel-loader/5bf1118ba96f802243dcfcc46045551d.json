{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomInput from \"../../components/CustomInput\";\nimport CustomButton from \"../../components/CustomButton\";\nimport SocialSignInButtons from \"../../components/SocialSignInButtons\";\nimport { useNavigation } from '@react-navigation/native';\nimport { API, USER_ID, USER_TOKEN } from \"../../services/env\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUpScreen = function SignUpScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var onSignUpPress = function _callee2() {\n    var URI, response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            URI = API + \"register\";\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios({\n              method: \"post\",\n              url: URI,\n              data: {\n                name: username,\n                email: email,\n                password: password,\n                password_confirmation: confirmPassword\n              }\n            }).then(function _callee(response) {\n              var token, userId, budgetsFirst;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      AsyncStorage.setItem(\"token\", response.data.token);\n                      AsyncStorage.setItem(\"user_id\", response.data.donnees.id.toString());\n                      _context.next = 4;\n                      return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n                    case 4:\n                      token = _context.sent;\n                      _context.next = 7;\n                      return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user_id\"));\n\n                    case 7:\n                      userId = _context.sent;\n                      budgetsFirst = API + \"budgets\";\n                      navigation.navigate(\"Home\", {\n                        username: username\n                      });\n\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 3:\n            response = _context2.sent;\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onAlreadyRegisterPress = function onAlreadyRegisterPress() {\n    navigation.navigate(\"SignIn\");\n  };\n\n  var OnPressUsePolicy = function OnPressUsePolicy() {\n    console.warn(\"Use Policy\");\n  };\n\n  var OnPressPrivacyPolicy = function OnPressPrivacyPolicy() {\n    console.warn(\"Privacy Policy\");\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Cr\\xE9er un compte\"\n      }), _jsx(CustomInput, {\n        placeholder: \"Pseudo\",\n        value: username,\n        setValue: setUsername\n      }), _jsx(CustomInput, {\n        placeholder: \"Email\",\n        value: email,\n        setValue: setEmail\n      }), _jsx(CustomInput, {\n        placeholder: \"Mot de Passe\",\n        value: password,\n        setValue: setPassword,\n        secureTextEntry: true\n      }), _jsx(CustomInput, {\n        placeholder: \"Confirmer le Mot de Passe\",\n        value: confirmPassword,\n        setValue: setConfirmPassword,\n        secureTextEntry: true\n      }), _jsx(CustomButton, {\n        onPress: onSignUpPress,\n        text: \"S'enregistrer\"\n      }), _jsxs(Text, {\n        style: styles.text,\n        children: [\"En vous enregistrant, vous acceptez la\", ' ', _jsx(Text, {\n          style: styles.link,\n          onPress: OnPressUsePolicy,\n          children: \"politique d'utilisation\"\n        }), \" ainsi que la\", ' ', _jsx(Text, {\n          style: styles.link,\n          onPress: OnPressPrivacyPolicy,\n          children: \"politique de confidentialit\\xE9\"\n        }), \" d'OrgaBud\"]\n      }), _jsx(CustomButton, {\n        onPress: onAlreadyRegisterPress,\n        text: \"Déjà inscrit ? Connectez-vous\",\n        type: \"TERTIARY\"\n      })]\n    })\n  });\n};\n\nexport default SignUpScreen;\nvar styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    alignItems: \"center\"\n  },\n  title: {\n    textTransform: \"capitalize\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    margin: 10\n  },\n  text: {\n    color: \"#5b712c\",\n    marginVertical: 10,\n    fontWeight: \"200\"\n  },\n  link: {\n    color: \"#5b712c\",\n    fontWeight: \"normal\"\n  }\n});","map":{"version":3,"names":["React","useState","CustomInput","CustomButton","SocialSignInButtons","useNavigation","API","USER_ID","USER_TOKEN","axios","AsyncStorage","SignUpScreen","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","navigation","onSignUpPress","URI","method","url","data","name","password_confirmation","then","response","setItem","token","donnees","id","toString","getItem","userId","budgetsFirst","navigate","onAlreadyRegisterPress","OnPressUsePolicy","console","warn","OnPressPrivacyPolicy","styles","root","title","text","link","StyleSheet","create","padding","alignItems","textTransform","fontSize","fontWeight","margin","color","marginVertical"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/authentication/src/screens/SignUpScreen/SignUpScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, StyleSheet, ScrollView } from 'react-native'\nimport CustomInput from '../../components/CustomInput'\nimport CustomButton from '../../components/CustomButton'\nimport SocialSignInButtons from '../../components/SocialSignInButtons'\nimport { useNavigation } from '@react-navigation/native'\nimport { API, USER_ID, USER_TOKEN } from \"../../services/env\"\nimport axios from \"axios\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst SignUpScreen = () => {\n    const [username, setUsername]= useState('');\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const navigation = useNavigation();\n    \n  const onSignUpPress = async () => {\n    const URI = API + \"register\";\n    // console.log(URI)\n    const response = await axios({\n      method: \"post\",\n      url: URI,\n      data: {\n        name: username,\n        email: email,\n        password: password,\n        password_confirmation: confirmPassword,\n      },\n    })\n      .then( async (response) => {\n        AsyncStorage.setItem(\"token\", response.data.token);\n        AsyncStorage.setItem(\"user_id\", response.data.donnees.id.toString());\n        // \n        const token = await AsyncStorage.getItem(\"token\");\n        const userId = await AsyncStorage.getItem(\"user_id\");\n        const budgetsFirst = API + \"budgets\";\n        // const first = await axios({\n        //   method: \"post\",\n        //   url: budgetsFirst,\n        //   headers: {\n        //     Authorization: `Bearer ${token}`,\n        //   },\n        //   data: {\n        //     value: 0,\n        //     field_id: 6,\n        //     id_user: userId,\n        //     month: 1,\n        //     year: 1900,\n        //   },\n        // });\n\n        navigation.navigate(\"Home\", { username: username });\n\n      });  \n  // console.warn(\"Enregistrer \"+ username + \" \" + email + \" \" + password + \" \" + confirmPassword)\n  }\n\n\n    const onAlreadyRegisterPress = () => {\n      navigation.navigate(\"SignIn\");\n    };\n\n    const OnPressUsePolicy = () => {\n      console.warn(\"Use Policy\");\n    }\n\n    const OnPressPrivacyPolicy = () => {\n      console.warn(\"Privacy Policy\");\n    };\n\n    return (\n      <ScrollView>\n        <View style={styles.root}>\n          <Text style={styles.title}>Créer un compte</Text>\n          <CustomInput\n            placeholder={\"Pseudo\"}\n            value={username}\n            setValue={setUsername}\n          />\n          <CustomInput\n            placeholder={\"Email\"}\n            value={email}\n            setValue={setEmail}\n          />\n          <CustomInput\n            placeholder={\"Mot de Passe\"}\n            value={password}\n            setValue={setPassword}\n            secureTextEntry={true}\n          />\n          <CustomInput\n            placeholder={\"Confirmer le Mot de Passe\"}\n            value={confirmPassword}\n            setValue={setConfirmPassword}\n            secureTextEntry={true}\n          />\n          <CustomButton onPress={onSignUpPress} text={\"S'enregistrer\"} />\n\n          <Text style={styles.text}>\n            En vous enregistrant, vous acceptez la{' '}\n            <Text style={styles.link} onPress={OnPressUsePolicy}>politique d'utilisation</Text> ainsi que la{' '}\n            <Text style={styles.link} onPress={OnPressPrivacyPolicy}>politique de confidentialité</Text> d'OrgaBud\n          </Text>\n\n          {/* <SocialSignInButtons /> */}\n          <CustomButton\n            onPress={onAlreadyRegisterPress}\n            text={\"Déjà inscrit ? Connectez-vous\"}\n            type=\"TERTIARY\"\n          />\n        </View>\n      </ScrollView>\n    );\n}\n\nexport default SignUpScreen\n\nconst styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    alignItems: \"center\",\n  },\n  title: {\n    textTransform: \"capitalize\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    margin: 10,\n  },\n  text: {\n    color: \"#5b712c\",\n    marginVertical: 10,\n    fontWeight: \"200\",\n  },\n  link: {\n    color: \"#5b712c\",\n    fontWeight: \"normal\",\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}