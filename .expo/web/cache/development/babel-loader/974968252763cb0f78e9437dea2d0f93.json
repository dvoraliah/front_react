{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CustomInput from \"../../components/CustomInput\";\nimport CustomButton from \"../../components/CustomButton\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport CustomRedirectAlert from \"../../components/CustomRedirectAlert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar URI = \"http://192.168.1.14:8000/api/isRegister\";\n\nvar ForgotPassWordScreen = function ForgotPassWordScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var onResetPassword = function onResetPassword() {\n    axios({\n      method: \"post\",\n      url: URI,\n      data: {\n        email: email\n      }\n    }).then(function (response) {\n      response.data.Resultat ? sessionStorage.setItem(\"codeReset\", JSON.stringify(response.data.Resultat)) : sessionStorage.setItem(\"codeReset\", \"non\");\n      response.data.Resultat ? console.warn(\"ok\") : navigation.navigate(\"NewPassWord\");\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  var onBackToSignInPress = function onBackToSignInPress() {\n    navigation.navigate(\"SignIn\");\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Renvoyer le Mot de Passe\"\n      }), _jsx(CustomInput, {\n        placeholder: \"Email\",\n        value: email,\n        setValue: setEmail\n      }), _jsx(CustomButton, {\n        onPress: onResetPassword,\n        text: \"Réinitialiser le mot de passe\"\n      }), _jsx(CustomButton, {\n        onPress: onBackToSignInPress,\n        text: \"Retour à la connexion\",\n        type: \"TERTIARY\"\n      })]\n    })\n  });\n};\n\nexport default ForgotPassWordScreen;\nvar styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    alignItems: \"center\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    margin: 10\n  },\n  text: {\n    color: \"#fff\",\n    marginVertical: 10\n  },\n  link: {\n    color: \"salmon\"\n  }\n});","map":{"version":3,"names":["React","useState","CustomInput","CustomButton","useNavigation","axios","CustomRedirectAlert","URI","ForgotPassWordScreen","navigation","email","setEmail","onResetPassword","method","url","data","then","response","Resultat","sessionStorage","setItem","JSON","stringify","console","warn","navigate","catch","error","log","onBackToSignInPress","styles","root","title","StyleSheet","create","padding","alignItems","textTransform","fontSize","fontWeight","margin","text","color","marginVertical","link"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/native/authentication/src/screens/ForgotPasswordScreen/ForgotPassWordScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, StyleSheet, ScrollView, Alert } from 'react-native'\nimport CustomInput from '../../components/CustomInput'\nimport CustomButton from '../../components/CustomButton'\nimport { useNavigation } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport CustomRedirectAlert from \"../../components/CustomRedirectAlert\"\n\n\nconst URI = \"http://192.168.1.14:8000/api/isRegister\";\n\nconst ForgotPassWordScreen = () => {\n  const navigation = useNavigation();\n  const [email, setEmail] = useState(\"\");\n  \n  const onResetPassword = () => {\n    //Verification en bdd si l'email est existant en base de donnée.\n    axios({\n      method: \"post\",\n      url: URI,\n      data: {\n        email: email,\n      },\n    })\n      .then((response) => {\n        //Si l'email est en BDD je stocke le code dans la sessionStorage et j'envoie l'utilisateur vers la page de validation. sinon je renvois un message //TODOle placer en bdd plutot que dans la session et envoyer un mail à l'utilisateur contenant le code.\n        response.data.Resultat\n          ? sessionStorage.setItem(\n              \"codeReset\",\n              JSON.stringify(response.data.Resultat)\n            )\n          : sessionStorage.setItem(\n              \"codeReset\",\n              \"non\")\n        response.data.Resultat\n          ? console.warn(\"ok\") /* navigation.navigate(\"NewPassWord\") */\n          : navigation.navigate(\"NewPassWord\");\n          // : Alert.alert(\"Aucune Correspondance\", \"Email introuvable\", [\n          //     {\n          //       text: \"S'enregistrer\",\n          //       onPress: () => navigation.navigate(\"SignUp\"),\n          //     },\n          //     {\n          //       text: \"Annuler\",\n          //       onPress: () => console.warn(\"exit\"),\n          //       style: \"cancel\",\n          //     },\n          //   ]);\n      })\n      .catch((error) => console.log(error));\n    \n  };\n\n  const onBackToSignInPress = () => {\n    navigation.navigate(\"SignIn\");\n  }\n\n  return (\n    <ScrollView>\n      <View style={styles.root}>\n        <Text style={styles.title}>Renvoyer le Mot de Passe</Text>\n\n        <CustomInput \n          placeholder={\"Email\"} \n          value={email} \n          setValue={setEmail} \n          />\n\n        <CustomButton onPress={onResetPassword} text={\"Réinitialiser le mot de passe\"} />\n\n        <CustomButton\n          onPress={onBackToSignInPress}\n          text={\"Retour à la connexion\"}\n          type=\"TERTIARY\"\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default ForgotPassWordScreen;\n\nconst styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    alignItems: \"center\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    margin: 10,\n  },\n  text: {\n    color: \"#fff\",\n    marginVertical: 10,\n  },\n  link: {\n    color: \"salmon\",\n  },\n});\n\n// Alert.alert(\"Aucune Correspondance\", \"Email introuvable\", [\n//   {\n//     text: \"S'enregistrer\",\n//     onPress: () => navigation.navigate(\"SignUp\"),\n//   },\n//   {\n//     text: \"Annuler\",\n//     onPress: () => console.warn(\"exit\"),\n//     style: \"cancel\",\n//   },\n// ]);"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP;;;AAGA,IAAMC,GAAG,GAAG,yCAAZ;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;EACjC,IAAMC,UAAU,GAAGL,aAAa,EAAhC;;EACA,gBAA0BH,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOS,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAE5BP,KAAK,CAAC;MACJQ,MAAM,EAAE,MADJ;MAEJC,GAAG,EAAEP,GAFD;MAGJQ,IAAI,EAAE;QACJL,KAAK,EAAEA;MADH;IAHF,CAAD,CAAL,CAOGM,IAPH,CAOQ,UAACC,QAAD,EAAc;MAElBA,QAAQ,CAACF,IAAT,CAAcG,QAAd,GACIC,cAAc,CAACC,OAAf,CACE,WADF,EAEEC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACF,IAAT,CAAcG,QAA7B,CAFF,CADJ,GAKIC,cAAc,CAACC,OAAf,CACE,WADF,EAEE,KAFF,CALJ;MAQAH,QAAQ,CAACF,IAAT,CAAcG,QAAd,GACIK,OAAO,CAACC,IAAR,CAAa,IAAb,CADJ,GAEIf,UAAU,CAACgB,QAAX,CAAoB,aAApB,CAFJ;IAcD,CA/BH,EAgCGC,KAhCH,CAgCS,UAACC,KAAD;MAAA,OAAWJ,OAAO,CAACK,GAAR,CAAYD,KAAZ,CAAX;IAAA,CAhCT;EAkCD,CApCD;;EAsCA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;IAChCpB,UAAU,CAACgB,QAAX,CAAoB,QAApB;EACD,CAFD;;EAIA,OACE,KAAC,UAAD;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEK,MAAM,CAACC,IAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,KAApB;QAAA;MAAA,EADF,EAGE,KAAC,WAAD;QACE,WAAW,EAAE,OADf;QAEE,KAAK,EAAEtB,KAFT;QAGE,QAAQ,EAAEC;MAHZ,EAHF,EASE,KAAC,YAAD;QAAc,OAAO,EAAEC,eAAvB;QAAwC,IAAI,EAAE;MAA9C,EATF,EAWE,KAAC,YAAD;QACE,OAAO,EAAEiB,mBADX;QAEE,IAAI,EAAE,uBAFR;QAGE,IAAI,EAAC;MAHP,EAXF;IAAA;EADF,EADF;AAqBD,CAnED;;AAqEA,eAAerB,oBAAf;AAEA,IAAMsB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,IAAI,EAAE;IACJI,OAAO,EAAE,EADL;IAEJC,UAAU,EAAE;EAFR,CADyB;EAK/BJ,KAAK,EAAE;IACLK,aAAa,EAAE,WADV;IAELC,QAAQ,EAAE,EAFL;IAGLC,UAAU,EAAE,MAHP;IAILC,MAAM,EAAE;EAJH,CALwB;EAW/BC,IAAI,EAAE;IACJC,KAAK,EAAE,MADH;IAEJC,cAAc,EAAE;EAFZ,CAXyB;EAe/BC,IAAI,EAAE;IACJF,KAAK,EAAE;EADH;AAfyB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}