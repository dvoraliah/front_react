{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomInput from \"../../components/CustomInput\";\nimport CustomButton from \"../../components/CustomButton\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NewPasswordScreen = function NewPasswordScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      code = _useState2[0],\n      setCode = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var onNewPassword = function onNewPassword() {};\n\n  var onBackToSignInPress = function onBackToSignInPress() {\n    navigation.navigate(\"SignIn\");\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Red\\xE9finir le mot de passe\"\n      }), _jsx(CustomInput, {\n        placeholder: \"Code\",\n        value: code,\n        setValue: setCode\n      }), _jsx(CustomInput, {\n        placeholder: \"Mot de Passe\",\n        value: password,\n        setValue: setPassword,\n        secureTextEntry: true\n      }), _jsx(CustomInput, {\n        placeholder: \"Confirmer le Mot de Passe\",\n        value: confirmPassword,\n        setValue: setConfirmPassword,\n        secureTextEntry: true\n      }), _jsx(CustomButton, {\n        onPress: onNewPassword,\n        text: \"Redefinir le mot de passe\"\n      }), _jsx(CustomButton, {\n        onPress: onBackToSignInPress,\n        text: \"Retour à la connexion\",\n        type: \"TERTIARY\"\n      })]\n    })\n  });\n};\n\nexport default NewPasswordScreen;\nvar styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    alignItems: \"center\",\n    backgroundColor: \"#f5b7b1\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    margin: 10\n  },\n  text: {\n    color: \"#fff\",\n    marginVertical: 10\n  },\n  link: {\n    color: \"salmon\"\n  }\n});","map":{"version":3,"names":["React","useState","CustomInput","CustomButton","useNavigation","NewPasswordScreen","navigation","code","setCode","password","setPassword","confirmPassword","setConfirmPassword","onNewPassword","onBackToSignInPress","navigate","styles","root","title","StyleSheet","create","padding","alignItems","backgroundColor","textTransform","fontSize","fontWeight","margin","text","color","marginVertical","link"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/native/authentication/src/screens/NewPasswordScreen/NewPasswordScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, StyleSheet, ScrollView } from 'react-native'\nimport CustomInput from '../../components/CustomInput'\nimport CustomButton from '../../components/CustomButton'\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst NewPasswordScreen = () => {\n  const navigation = useNavigation();\n  const [code, setCode] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const onNewPassword = () => {\n    \n    // navigation.navigate(\"Home\");\n\n  };\n  \n\n  const onBackToSignInPress = () => {\n    navigation.navigate(\"SignIn\");\n  };\n\n  return (\n    <ScrollView>\n      <View style={styles.root}>\n        <Text style={styles.title}>Redéfinir le mot de passe</Text>\n\n        <CustomInput\n          placeholder={\"Code\"}\n          value={code}\n          setValue={setCode}\n        />\n        <CustomInput\n          placeholder={\"Mot de Passe\"}\n          value={password}\n          setValue={setPassword}\n          secureTextEntry={true}\n        />\n        <CustomInput\n          placeholder={\"Confirmer le Mot de Passe\"}\n          value={confirmPassword}\n          setValue={setConfirmPassword}\n          secureTextEntry={true}\n        />\n\n        <CustomButton\n          onPress={onNewPassword}\n          text={\"Redefinir le mot de passe\"}\n        />\n\n        <CustomButton\n          onPress={onBackToSignInPress}\n          text={\"Retour à la connexion\"}\n          type=\"TERTIARY\"\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default NewPasswordScreen;\n\nconst styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    alignItems: \"center\",\n    backgroundColor: \"#f5b7b1\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    margin: 10,\n  },\n  text: {\n    color: \"#fff\",\n    marginVertical: 10,\n  },\n  link: {\n    color: \"salmon\",\n  },\n});"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;EAC9B,IAAMC,UAAU,GAAGF,aAAa,EAAhC;;EACA,gBAAwBH,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOM,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAgCP,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOQ,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAA8CT,QAAQ,CAAC,EAAD,CAAtD;EAAA;EAAA,IAAOU,eAAP;EAAA,IAAwBC,kBAAxB;;EAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM,CAI3B,CAJD;;EAOA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;IAChCR,UAAU,CAACS,QAAX,CAAoB,QAApB;EACD,CAFD;;EAIA,OACE,KAAC,UAAD;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC,IAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,KAApB;QAAA;MAAA,EADF,EAGE,KAAC,WAAD;QACE,WAAW,EAAE,MADf;QAEE,KAAK,EAAEX,IAFT;QAGE,QAAQ,EAAEC;MAHZ,EAHF,EAQE,KAAC,WAAD;QACE,WAAW,EAAE,cADf;QAEE,KAAK,EAAEC,QAFT;QAGE,QAAQ,EAAEC,WAHZ;QAIE,eAAe,EAAE;MAJnB,EARF,EAcE,KAAC,WAAD;QACE,WAAW,EAAE,2BADf;QAEE,KAAK,EAAEC,eAFT;QAGE,QAAQ,EAAEC,kBAHZ;QAIE,eAAe,EAAE;MAJnB,EAdF,EAqBE,KAAC,YAAD;QACE,OAAO,EAAEC,aADX;QAEE,IAAI,EAAE;MAFR,EArBF,EA0BE,KAAC,YAAD;QACE,OAAO,EAAEC,mBADX;QAEE,IAAI,EAAE,uBAFR;QAGE,IAAI,EAAC;MAHP,EA1BF;IAAA;EADF,EADF;AAoCD,CArDD;;AAuDA,eAAeT,iBAAf;AAEA,IAAMW,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,IAAI,EAAE;IACJI,OAAO,EAAE,EADL;IAEJC,UAAU,EAAE,QAFR;IAGJC,eAAe,EAAE;EAHb,CADyB;EAM/BL,KAAK,EAAE;IACLM,aAAa,EAAE,WADV;IAELC,QAAQ,EAAE,EAFL;IAGLC,UAAU,EAAE,MAHP;IAILC,MAAM,EAAE;EAJH,CANwB;EAY/BC,IAAI,EAAE;IACJC,KAAK,EAAE,MADH;IAEJC,cAAc,EAAE;EAFZ,CAZyB;EAgB/BC,IAAI,EAAE;IACJF,KAAK,EAAE;EADH;AAhByB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}