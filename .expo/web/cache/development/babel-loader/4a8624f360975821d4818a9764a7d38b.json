{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CustomButton from \"../CustomButton\";\nimport { DataTable } from \"react-native-paper\";\nimport { USER_ID, USER_TOKEN, API } from \"../../services/env\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar optionsPerPage = [2, 3, 4];\n\nvar CustomTableResume = function CustomTableResume(_ref) {\n  var budgets = _ref.budgets,\n      categories = _ref.categories,\n      idCategorie = _ref.idCategorie,\n      categorieName = _ref.categorieName,\n      slugCategorie = _ref.slugCategorie,\n      actualMonth = _ref.actualMonth,\n      actualYear = _ref.actualYear;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(optionsPerPage[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemsPerPage = _useState4[0],\n      setItemsPerPage = _useState4[1];\n\n  var addIcon = _jsx(Icon, {\n    name: \"plus\",\n    size: 55,\n    color: \"#fff\"\n  });\n\n  var deleteIcon = _jsx(Icon, {\n    name: \"trash\",\n    size: 30,\n    color: \"red\"\n  });\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user_id = _useState6[0],\n      setUserId = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      token = _useState8[0],\n      setToken = _useState8[1];\n\n  var navigation = useNavigation();\n  var actualCategory = \"\";\n\n  var returnCategorie = function returnCategorie() {\n    navigation.push(\"Categorie\", {\n      categorieName: categorieName,\n      slug: slugCategorie,\n      categorieId: idCategorie\n    });\n  };\n\n  var totalSomme = 0;\n  var revenus = 0;\n  var depenses = 0;\n\n  var fillUserValues = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = setToken;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 3:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n            _context.t2 = setUserId;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user_id\"));\n\n          case 8:\n            _context.t3 = _context.sent;\n            (0, _context.t2)(_context.t3);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  fillUserValues();\n\n  var onDebitedPress = function _callee2(id, value) {\n    var URI, response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            URI = API + \"budgets/\" + id;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios({\n              method: \"put\",\n              url: URI,\n              headers: {\n                Authorization: \"Bearer \" + token\n              },\n              data: {\n                is_debited: value\n              }\n            }).then(function () {\n              returnCategorie();\n            }));\n\n          case 3:\n            response = _context2.sent;\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    setPage(0);\n  }, [itemsPerPage]);\n  return _jsxs(DataTable, {\n    children: [_jsxs(DataTable.Header, {\n      children: [_jsx(DataTable.Title, {\n        children: \"Categorie\"\n      }), _jsx(DataTable.Title, {\n        numeric: true,\n        children: \"field\"\n      })]\n    }), categories.map(function (categorie) {\n      if (categorie.slug != \"resume\") {\n        var totalCateg = 0;\n        return _jsx(_Fragment, {\n          children: _jsxs(DataTable.Row, {\n            children: [_jsx(DataTable.Cell, {\n              children: categorie.name\n            }), budgets.map(function (budget) {\n              if (budget.field.field_category_id == categorie.id && actualMonth == budget.month && actualYear == budget.year) {\n                totalCateg = parseFloat(totalCateg) + parseFloat(budget.value);\n\n                if (categorie.id == 1) {\n                  revenus = parseFloat(revenus) + parseFloat(budget.value);\n                } else {\n                  depenses = parseFloat(depenses) + parseFloat(budget.value);\n                }\n              }\n\n              {}\n            }), _jsx(DataTable.Cell, {\n              numeric: true,\n              children: totalCateg\n            })]\n          })\n        });\n      }\n    }), _jsxs(DataTable.Row, {\n      style: {\n        borderBottomWidth: 0\n      },\n      children: [_jsx(DataTable.Cell, {\n        children: \" Total des Mouvements\"\n      }), _jsx(DataTable.Cell, {\n        numeric: true,\n        textStyle: parseFloat(revenus) - parseFloat(depenses) < 0 ? {\n          color: \"red\"\n        } : {\n          color: \"green\"\n        },\n        children: Math.round(parseFloat(revenus) - parseFloat(depenses), 2)\n      })]\n    }), _jsx(DataTable.Pagination, {\n      page: page,\n      numberOfPages: 3,\n      onPageChange: function onPageChange(page) {\n        return setPage(page);\n      },\n      label: \"\",\n      optionsPerPage: optionsPerPage,\n      itemsPerPage: itemsPerPage,\n      setItemsPerPage: setItemsPerPage,\n      showFastPagination: true,\n      optionsLabel: \"Rows per page\"\n    })]\n  });\n};\n\nexport default CustomTableResume;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    color: \"white\",\n    width: \"100%\",\n    borderColor: \"salmon\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5\n  },\n  center_cell: {\n    color: \"black\",\n    fontStyle: \"italic\"\n  },\n  align: {\n    marginTop: 20,\n    height: \"150%\"\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 30\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","CustomButton","DataTable","USER_ID","USER_TOKEN","API","useNavigation","axios","Icon","AsyncStorage","optionsPerPage","CustomTableResume","budgets","categories","idCategorie","categorieName","slugCategorie","actualMonth","actualYear","page","setPage","itemsPerPage","setItemsPerPage","addIcon","deleteIcon","user_id","setUserId","token","setToken","navigation","actualCategory","returnCategorie","push","slug","categorieId","totalSomme","revenus","depenses","fillUserValues","getItem","onDebitedPress","id","value","URI","method","url","headers","Authorization","data","is_debited","then","response","map","categorie","totalCateg","name","budget","field","field_category_id","month","year","parseFloat","borderBottomWidth","color","Math","round","styles","StyleSheet","create","container","alignItems","width","borderColor","borderWidth","borderRadius","padding","marginVertical","center_cell","fontStyle","align","marginTop","height","title","textAlign","fontSize"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/authentication/src/components/CustomTableResume/CustomTableResume.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { View, Text, TextInput, StyleSheet, Alert } from \"react-native\";\nimport CustomButton from \"../CustomButton\"\nimport { DataTable } from \"react-native-paper\";\nimport { USER_ID, USER_TOKEN, API } from \"../../services/env\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n\nconst optionsPerPage = [2, 3, 4];\n\nconst CustomTableResume = ({ budgets, categories, idCategorie, categorieName, slugCategorie, actualMonth, actualYear}) => {\n  const [page, setPage] = useState(0);\n  const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\n  const addIcon = <Icon name=\"plus\" size={55} color=\"#fff\" />;\n  const deleteIcon = <Icon name=\"trash\" size={30} color=\"red\" />;\n\n  const [user_id, setUserId] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const navigation = useNavigation();\n\n  var actualCategory = \"\";\n  \n  const returnCategorie = () => {\n    navigation.push(\"Categorie\", {\n        categorieName: categorieName,\n        slug: slugCategorie,\n        categorieId: idCategorie,\n    })\n  };\n\n  var totalSomme = 0;\n  var revenus = 0;\n  var depenses = 0;\n  const fillUserValues = async () => {\n    setToken(await AsyncStorage.getItem(\"token\"));\n    setUserId(await AsyncStorage.getItem(\"user_id\"));\n  }\n  fillUserValues();\n  \n  /* Récupère les valeurs des champs pour créer le total des revenus */\n  // budgets.map((budget) => {\n    \n  //   if ((budget.field.field_category_id == idCategorie) && (budget.month == actualMonth) && (budget.year == actualYear)) {\n  //     totalSomme = (parseFloat(totalSomme) + parseFloat(budget.value))\n  //   }\n  // })\n \n\n  /* Lorsque l'utilisateur appuie sur la valeur de is_debited elle change pour la valeur donnée en param (boolean), l'utilisateur est ensuite redirigé vers la page de la catégorie d'où il vient. */\n  const onDebitedPress = async (id, value) => {\n    const URI = API + \"budgets/\" + id;\n    const response = await axios({\n      method: \"put\",\n      url: URI,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      data:{\n        is_debited: value,\n      }\n    }).then(function () {\n      returnCategorie()\n    });\n  }\n\n\n\n    \n\n  useEffect(() => {\n    setPage(0);\n  }, [itemsPerPage]);\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title>Categorie</DataTable.Title>\n        <DataTable.Title numeric>field</DataTable.Title>\n      </DataTable.Header>\n\n      {categories.map((categorie) => {\n        if (categorie.slug != \"resume\") {\n          var totalCateg = 0;\n          return (\n            <>\n              <DataTable.Row>\n                <DataTable.Cell>{categorie.name}</DataTable.Cell>\n                {budgets.map((budget) => {\n                  if (\n                    budget.field.field_category_id == categorie.id &&\n                    actualMonth == budget.month &&\n                    actualYear == budget.year\n                  ) {\n                    totalCateg =\n                      parseFloat(totalCateg) + parseFloat(budget.value);\n                    if (categorie.id == 1) {\n                      revenus = parseFloat(revenus) + parseFloat(budget.value);\n                    } else {\n                      depenses =\n                        parseFloat(depenses) + parseFloat(budget.value);\n                    }\n                  }\n                  {\n                  }\n                })}\n                <DataTable.Cell numeric>{totalCateg}</DataTable.Cell>\n              </DataTable.Row>\n            </>\n          );\n        }\n      })}\n      {}\n      <DataTable.Row style={{ borderBottomWidth: 0 }}>\n        <DataTable.Cell> Total des Mouvements</DataTable.Cell>\n        <DataTable.Cell\n          numeric\n          textStyle={\n            (parseFloat(revenus) - parseFloat(depenses) < 0 )\n              ? { color: \"red\" }\n              : { color: \"green\" }\n          }\n        >\n          {Math.round(parseFloat(revenus) - parseFloat(depenses), 2)}\n        </DataTable.Cell>\n      </DataTable.Row>\n\n      <DataTable.Pagination\n        page={page}\n        numberOfPages={3}\n        onPageChange={(page) => setPage(page)}\n        label=\"\"\n        optionsPerPage={optionsPerPage}\n        itemsPerPage={itemsPerPage}\n        setItemsPerPage={setItemsPerPage}\n        showFastPagination\n        optionsLabel={\"Rows per page\"}\n      />\n    </DataTable>\n  );\n};\nexport default CustomTableResume;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    color: \"white\",\n    width: \"100%\",\n    borderColor: \"salmon\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5,\n  },\n  center_cell: {\n    color: \"black\",\n    fontStyle: \"italic\",\n  },\n  align: {\n    marginTop: 20,\n    height: \"150%\",\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize : 30\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}