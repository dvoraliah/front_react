{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Link } from \"react-native-web/dist/index\";\nimport CustomButton from \"../../components/CustomButton\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { API, USER_TOKEN } from \"../../services/env\";\nimport axios from \"axios\";\nimport CustomTable from \"../../components/CustomTable\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport moment from \"moment\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CategorieScreen = function CategorieScreen(_ref) {\n  var route = _ref.route;\n  var monthString = [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"];\n\n  var _useState = useState(new Date().getMonth()),\n      _useState2 = _slicedToArray(_useState, 2),\n      actualMonth = _useState2[0],\n      setMonth = _useState2[1];\n\n  var _useState3 = useState(new Date().getFullYear()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      actualYear = _useState4[0],\n      setYear = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      username = _useState6[0],\n      setUsername = _useState6[1];\n\n  var _route$params = route.params,\n      categorieName = _route$params.categorieName,\n      slug = _route$params.slug,\n      categorieId = _route$params.categorieId;\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      BUDGETS = _useState8[0],\n      SETBUDGETS = _useState8[1];\n\n  var changeMonth = function changeMonth(type) {\n    if (type == \"ADD\") {\n      if (actualMonth < 11) {\n        setMonth(actualMonth + 1);\n      } else {\n        setMonth(0);\n        setYear(actualYear + 1);\n      }\n    }\n\n    if (type == \"SUBT\") {\n      if (actualMonth > 0) {\n        setMonth(actualMonth - 1);\n      } else {\n        setMonth(11);\n        setYear(actualYear - 1);\n      }\n    }\n  };\n\n  var BUDGETSDetail = function _callee() {\n    var token, URI, response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 2:\n            token = _context.sent;\n            URI = API + \"budgets\";\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios({\n              method: \"get\",\n              url: URI,\n              headers: {\n                Authorization: \"Bearer \" + token\n              }\n            }).then(function (response) {\n              SETBUDGETS(response.data);\n              console.warn(response.data);\n              setUsername(response.data[0].user.name);\n            }));\n\n          case 6:\n            response = _context.sent;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    BUDGETSDetail();\n  }, []);\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      style: styles.title,\n      children: [\"Accueil categorie \", categorieName]\n    }), _jsx(CustomButton, {\n      onPress: function onPress() {\n        navigation.navigate(\"Home\", {\n          username: username\n        });\n      },\n      text: \"Retour aux cat\\xE9gories\"\n    }), _jsx(CustomButton, {\n      onPress: function onPress() {\n        setMonth(new Date().getMonth());\n        setYear(new Date().getFullYear());\n      },\n      text: \"Aujourd'hui\",\n      type: \"TERTIARY\"\n    }), _jsxs(View, {\n      style: styles.date,\n      children: [_jsx(Icon.Button, {\n        name: \"caret-left\",\n        size: 30,\n        color: \"#5b712c\",\n        backgroundColor: \"#E6F8E0\",\n        onPress: function onPress() {\n          return changeMonth(\"SUBT\");\n        }\n      }), _jsx(Text, {\n        style: {\n          fontSize: 24,\n          fontWeight: \"bold\",\n          textTransform: \"uppercase\"\n        },\n        children: monthString[actualMonth] + \" \" + actualYear\n      }), _jsx(Icon.Button, {\n        name: \"caret-right\",\n        size: 30,\n        color: \"#5b712c\",\n        backgroundColor: \"#E6F8E0\",\n        onPress: function onPress() {\n          return changeMonth(\"ADD\");\n        }\n      })]\n    }), _jsx(CustomTable, {\n      budgets: BUDGETS,\n      idCategorie: categorieId,\n      categorieName: categorieName,\n      slugCategorie: slug,\n      actualMonth: actualMonth + 1,\n      actualYear: actualYear\n    })]\n  });\n};\n\nexport default CategorieScreen;\nvar styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    alignItems: \"center\",\n    backgroundColor: \"#f5b7b1\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    margin: 10\n  },\n  date: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\"\n  },\n  text: {\n    color: \"#fff\",\n    marginVertical: 10\n  },\n  link: {\n    color: \"salmon\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Link","CustomButton","useNavigation","API","USER_TOKEN","axios","CustomTable","AsyncStorage","Icon","moment","CategorieScreen","route","monthString","Date","getMonth","actualMonth","setMonth","getFullYear","actualYear","setYear","username","setUsername","params","categorieName","slug","categorieId","BUDGETS","SETBUDGETS","changeMonth","type","BUDGETSDetail","getItem","token","URI","method","url","headers","Authorization","then","response","data","console","warn","user","name","navigation","styles","title","navigate","date","fontSize","fontWeight","textTransform","StyleSheet","create","root","padding","alignItems","backgroundColor","margin","justifyContent","display","flexDirection","flexWrap","text","color","marginVertical","link"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/authentication/src/screens/CategorieScreen/CategorieScreen.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { View, Text, StyleSheet, Link} from 'react-native'\nimport CustomButton from '../../components/CustomButton';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { API, USER_TOKEN} from \"../../services/env\";\nimport axios from \"axios\";\nimport CustomTable from \"../../components/CustomTable\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport moment from \"moment\";\n\n\n\nconst CategorieScreen = ({route}) => {\n  // console.warn(route.params)\n\n  const monthString = [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"]\n  const [actualMonth, setMonth] = useState(new Date().getMonth());\n  const [actualYear, setYear] = useState(new Date().getFullYear());\n  const [username, setUsername] = useState('')\n  \n  const { categorieName, slug, categorieId } = route.params;\n  const [BUDGETS, SETBUDGETS] = useState([]);\n  const changeMonth = (type) => {\n    if(type == \"ADD\"){\n      if (actualMonth < 11) {\n        setMonth(actualMonth + 1);\n        \n      } else {\n        setMonth(0);\n        setYear(actualYear + 1);\n      }\n    }\n    if (type == \"SUBT\") {\n      if (actualMonth > 0) {\n        setMonth(actualMonth - 1);\n      }else {\n        setMonth(11)\n        setYear(actualYear - 1);\n      }\n    }\n    \n    \n  }\n\n\n  const BUDGETSDetail = async () => {\n    const token = await AsyncStorage.getItem(\"token\");\n    // console.warn(USER_TOKEN)\n    const URI = API + \"budgets\";\n    const response = await axios({\n      method: \"get\",\n      url: URI,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(function (response) {\n      SETBUDGETS(response.data);\n      console.warn(response.data)\n      setUsername(response.data[0].user.name)\n    });\n  };\n  useEffect( () => {\n    BUDGETSDetail();\n  }, []);\n\n\nconst navigation = useNavigation();\n    return (\n      <View>\n        <Text style={styles.title}>Accueil categorie {categorieName}</Text>\n        <CustomButton\n          onPress={() => {\n            navigation.navigate(\"Home\", {username: username});\n          }}\n          text=\"Retour aux catégories\"\n        />\n        <CustomButton\n          onPress={() => {\n            setMonth(new Date().getMonth());\n            setYear(new Date().getFullYear());\n          }}\n          text=\"Aujourd'hui\"\n          type=\"TERTIARY\"\n        />\n        <View style={styles.date}>\n          <Icon.Button\n            name=\"caret-left\"\n            size={30}\n            color=\"#5b712c\"\n            backgroundColor=\"#E6F8E0\"\n            onPress={() => changeMonth(\"SUBT\")}\n          />\n          <Text\n            style={{\n              fontSize: 24,\n              fontWeight: \"bold\",\n              textTransform: \"uppercase\",\n            }}\n          >\n            {/* {actualMonth == 0 ? setActualMonth(12) : \"\"} */}\n            {monthString[actualMonth] + \" \" + actualYear}\n          </Text>\n          <Icon.Button\n            name=\"caret-right\"\n            size={30}\n            color=\"#5b712c\"\n            backgroundColor=\"#E6F8E0\"\n            onPress={() => changeMonth(\"ADD\")}\n          />\n        </View>\n        <CustomTable\n          budgets={BUDGETS}\n          idCategorie={categorieId}\n          categorieName={categorieName}\n          slugCategorie={slug}\n          actualMonth={actualMonth + 1}\n          actualYear={actualYear}\n        />\n      </View>\n    );\n}\n\nexport default CategorieScreen\n\nconst styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    alignItems: \"center\",\n    backgroundColor: \"#f5b7b1\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    margin: 10,\n  },\n  date: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexDirection:\"row\",\n    flexWrap: \"nowrap\"\n  },\n  text: {\n    color: \"#fff\",\n    marginVertical: 10,\n  },\n  link: {\n    color: \"salmon\",\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}