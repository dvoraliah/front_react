{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CustomButton from \"../CustomButton\";\nimport { DataTable } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar optionsPerPage = [2, 3, 4];\n\nvar CustomTable = function CustomTable(_ref) {\n  var budgets = _ref.budgets,\n      idCategorie = _ref.idCategorie;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(optionsPerPage[0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemsPerPage = _useState4[0],\n      setItemsPerPage = _useState4[1];\n\n  useEffect(function () {\n    setPage(0);\n  }, [itemsPerPage]);\n  return _jsxs(DataTable, {\n    children: [_jsxs(DataTable.Header, {\n      children: [_jsx(DataTable.Title, {\n        children: \"Achat\"\n      }), _jsx(DataTable.Title, {\n        numeric: true,\n        children: \"Montant\"\n      }), _jsx(DataTable.Title, {\n        numeric: true,\n        children: \"D\\xE9bit\\xE9\"\n      }), _jsx(DataTable.Title, {\n        numeric: true,\n        children: \"Suppr\"\n      })]\n    }), budgets.map(function (budget) {\n      if (budget.field.field_category_id == idCategorie) {\n        console.log(budget);\n        return _jsx(_Fragment, {\n          children: _jsxs(DataTable.Row, {\n            children: [_jsx(DataTable.Cell, {\n              textStyle: styles.align,\n              children: _jsx(CustomButton, {\n                onPress: function onPress() {\n                  console.warn(\"achat\");\n                },\n                text: budget.field.name,\n                type: \"TERTIARY\"\n              })\n            }, budget.id + budget.field_id), _jsx(DataTable.Cell, {\n              numeric: true,\n              children: _jsx(CustomButton, {\n                onPress: function onPress() {\n                  console.warn(\"montant\");\n                },\n                text: budget.value,\n                type: \"TERTIARY\"\n              })\n            }, budget.id + budget.value), _jsx(DataTable.Cell, {\n              numeric: true,\n              children: _jsx(CustomButton, {\n                onPress: function onPress() {\n                  console.warn(\"débité\");\n                },\n                text: budget.is_debited,\n                type: \"TERTIARY\"\n              })\n            }, budget.id + budget.is_debited), _jsx(DataTable.Cell, {\n              numeric: true,\n              children: _jsx(CustomButton, {\n                onPress: function onPress() {\n                  console.warn(\"pouet\");\n                },\n                text: \"X\"\n              })\n            }, budget.id + \" delete\")]\n          }, budget.id)\n        });\n      }\n    }), _jsxs(DataTable.Row, {\n      children: [_jsx(DataTable.Cell, {\n        numeric: true\n      }), _jsx(DataTable.Cell, {\n        textStyle: styles.center_cell,\n        style: styles.align,\n        children: \"Nouvelle entr\\xE9e\"\n      }), _jsx(DataTable.Cell, {\n        numeric: true\n      })]\n    }), _jsx(DataTable.Pagination, {\n      page: page,\n      numberOfPages: 3,\n      onPageChange: function onPageChange(page) {\n        return setPage(page);\n      },\n      label: \"1-2 of 6\",\n      optionsPerPage: optionsPerPage,\n      itemsPerPage: itemsPerPage,\n      setItemsPerPage: setItemsPerPage,\n      showFastPagination: true,\n      optionsLabel: \"Rows per page\"\n    })]\n  });\n};\n\nexport default CustomTable;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    color: \"white\",\n    width: \"100%\",\n    borderColor: \"salmon\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5\n  },\n  center_cell: {\n    color: \"black\",\n    fontStyle: \"italic\"\n  },\n  align: {\n    width: '100%',\n    height: 150,\n    borderColor: \"salmon\",\n    borderWidth: 1,\n    borderRadius: 5\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","CustomButton","DataTable","optionsPerPage","CustomTable","budgets","idCategorie","page","setPage","itemsPerPage","setItemsPerPage","map","budget","field","field_category_id","console","log","styles","align","warn","name","id","field_id","value","is_debited","center_cell","StyleSheet","create","container","alignItems","color","width","borderColor","borderWidth","borderRadius","padding","marginVertical","fontStyle","height"],"sources":["/Applications/MAMP/htdocs/Projet_Orgabud/authentication/src/components/CustomTable/CustomTable.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { View, Text, TextInput, StyleSheet } from \"react-native\";\nimport CustomButton from \"../CustomButton\"\nimport { DataTable } from \"react-native-paper\";\n\nconst optionsPerPage = [2, 3, 4];\n\nconst CustomTable = ({ budgets, idCategorie}) => {\n  \n  // console.log(idCategorie)\n  const [page, setPage] = useState(0);\n  const [itemsPerPage, setItemsPerPage] = useState(optionsPerPage[0]);\n\n  useEffect(() => {\n    setPage(0);\n  }, [itemsPerPage]);\n\n  \n  return (\n    <DataTable>\n      <DataTable.Header>\n        \n        {/* <DataTable.Title>Date</DataTable.Title> */}\n        <DataTable.Title >Achat</DataTable.Title>\n\n        <DataTable.Title numeric>Montant</DataTable.Title>\n\n        <DataTable.Title numeric>Débité</DataTable.Title>\n\n        <DataTable.Title numeric>Suppr</DataTable.Title>\n      </DataTable.Header>\n\n        {budgets.map((budget) => {\n          if(budget.field.field_category_id == idCategorie){\n            console.log(budget)\n            return (\n              <>\n                <DataTable.Row key={budget.id}>\n                  <DataTable.Cell textStyle={styles.align}key={budget.id + budget.field_id}>\n                    <CustomButton\n                      onPress={() => {\n                        console.warn(\"achat\");\n                      }}\n                      text={budget.field.name}\n                      type={\"TERTIARY\"}\n                    />\n                  </DataTable.Cell>\n                  <DataTable.Cell key={budget.id + budget.value} numeric>\n                    <CustomButton\n                      onPress={() => {\n                        console.warn(\"montant\");\n                      }}\n                      text={budget.value}\n                      type={\"TERTIARY\"}\n                    />\n                  </DataTable.Cell>\n                  <DataTable.Cell key={budget.id + budget.is_debited} numeric>\n                    <CustomButton\n                      onPress={() => {\n                        console.warn(\"débité\");\n                      }}\n                      text={budget.is_debited}\n                      type={\"TERTIARY\"}\n                    />\n                  </DataTable.Cell>\n                  <DataTable.Cell key={budget.id + \" delete\"} numeric>\n                    <CustomButton\n                      onPress={() => {\n                        console.warn(\"pouet\");\n                      }}\n                      text={\"X\"}\n                    // type={\"TERTIARY\"}\n                    />\n                  </DataTable.Cell>\n                </DataTable.Row>\n              </>\n            );\n          }\n          \n          \n          \n        })}\n       \n      <DataTable.Row>\n        <DataTable.Cell numeric></DataTable.Cell>\n        <DataTable.Cell textStyle={styles.center_cell} style={styles.align}>\n          Nouvelle entrée\n        </DataTable.Cell>\n        <DataTable.Cell numeric></DataTable.Cell>\n      </DataTable.Row>\n        \n        \n      \n      <DataTable.Pagination\n        page={page}\n        numberOfPages={3}\n        onPageChange={(page) => setPage(page)}\n        label=\"1-2 of 6\"\n        optionsPerPage={optionsPerPage}\n        itemsPerPage={itemsPerPage}\n        setItemsPerPage={setItemsPerPage}\n        showFastPagination\n        optionsLabel={\"Rows per page\"}\n      />\n    </DataTable>\n  );\n};\nexport default CustomTable;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    color: \"white\",\n    width: \"100%\",\n    borderColor: \"salmon\",\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 5,\n  },\n  center_cell: {\n    color: \"black\",\n    fontStyle: \"italic\"\n  },\n  align: {\n    width: '100%',\n    height:150,\n    borderColor: \"salmon\",\n    borderWidth: 1,\n    borderRadius: 5,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}