{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomInput from \"../../components/CustomInput\";\nimport CustomButton from \"../../components/CustomButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NewPasswordScreen = function NewPasswordScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var onResetPassword = function onResetPassword() {\n    console.warn(\"Renvoyer le mot de passe\");\n  };\n\n  var onBackToSignInPress = function onBackToSignInPress() {\n    console.warn(\"Retour à la connexion\");\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Red\\xE9finir le mot de passe\"\n      }), _jsx(CustomInput, {\n        placeholder: \"Mot de Passe\",\n        value: password,\n        setValue: setPassword,\n        secureTextEntry: true\n      }), _jsx(CustomInput, {\n        placeholder: \"Confirmer le Mot de Passe\",\n        value: confirmPassword,\n        setValue: setConfirmPassword,\n        secureTextEntry: true\n      }), _jsx(CustomButton, {\n        onPress: onResetPassword,\n        text: \"Réinitialiser le mot de passe\"\n      }), _jsx(CustomButton, {\n        onPress: onBackToSignInPress,\n        text: \"Retour à la connexion\",\n        type: \"TERTIARY\"\n      })]\n    })\n  });\n};\n\nexport default NewPasswordScreen;\nvar styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    alignItems: \"center\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    margin: 10\n  },\n  text: {\n    color: \"#fff\",\n    marginVertical: 10\n  },\n  link: {\n    color: \"salmon\"\n  }\n});","map":{"version":3,"names":["React","useState","CustomInput","CustomButton","NewPasswordScreen","email","setEmail","onResetPassword","console","warn","onBackToSignInPress","styles","root","title","password","setPassword","confirmPassword","setConfirmPassword","StyleSheet","create","padding","alignItems","textTransform","fontSize","fontWeight","margin","text","color","marginVertical","link"],"sources":["/Applications/MAMP/htdocs/native/authentication/src/screens/NewPasswordScreen/NewPasswordScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, StyleSheet, ScrollView } from 'react-native'\nimport CustomInput from '../../components/CustomInput'\nimport CustomButton from '../../components/CustomButton'\n\nconst NewPasswordScreen = () => {\n  const [email, setEmail] = useState(\"\");\n\n  const onResetPassword = () => {\n    console.warn(\"Renvoyer le mot de passe\");\n  };\n\n  const onBackToSignInPress = () => {\n    console.warn(\"Retour à la connexion\");\n  };\n\n  return (\n    <ScrollView>\n      <View style={styles.root}>\n        <Text style={styles.title}>Redéfinir le mot de passe</Text>\n\n        <CustomInput\n          placeholder={\"Mot de Passe\"}\n          value={password}\n          setValue={setPassword}\n          secureTextEntry={true}\n        />\n        <CustomInput\n          placeholder={\"Confirmer le Mot de Passe\"}\n          value={confirmPassword}\n          setValue={setConfirmPassword}\n          secureTextEntry={true}\n        />\n\n        <CustomButton\n          onPress={onResetPassword}\n          text={\"Réinitialiser le mot de passe\"}\n        />\n\n        <CustomButton\n          onPress={onBackToSignInPress}\n          text={\"Retour à la connexion\"}\n          type=\"TERTIARY\"\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default NewPasswordScreen;\n\nconst styles = StyleSheet.create({\n  root: {\n    padding: 10,\n    alignItems: \"center\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n    margin: 10,\n  },\n  text:{\n    color: \"#fff\",\n    marginVertical: 10\n  },\n  link:{\n    color: \"salmon\"\n  }\n});"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,YAAP;;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;EAC9B,gBAA0BH,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC5BC,OAAO,CAACC,IAAR,CAAa,0BAAb;EACD,CAFD;;EAIA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;IAChCF,OAAO,CAACC,IAAR,CAAa,uBAAb;EACD,CAFD;;EAIA,OACE,KAAC,UAAD;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEE,MAAM,CAACC,IAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,KAApB;QAAA;MAAA,EADF,EAGE,KAAC,WAAD;QACE,WAAW,EAAE,cADf;QAEE,KAAK,EAAEC,QAFT;QAGE,QAAQ,EAAEC,WAHZ;QAIE,eAAe,EAAE;MAJnB,EAHF,EASE,KAAC,WAAD;QACE,WAAW,EAAE,2BADf;QAEE,KAAK,EAAEC,eAFT;QAGE,QAAQ,EAAEC,kBAHZ;QAIE,eAAe,EAAE;MAJnB,EATF,EAgBE,KAAC,YAAD;QACE,OAAO,EAAEV,eADX;QAEE,IAAI,EAAE;MAFR,EAhBF,EAqBE,KAAC,YAAD;QACE,OAAO,EAAEG,mBADX;QAEE,IAAI,EAAE,uBAFR;QAGE,IAAI,EAAC;MAHP,EArBF;IAAA;EADF,EADF;AA+BD,CA1CD;;AA4CA,eAAeN,iBAAf;AAEA,IAAMO,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,IAAI,EAAE;IACJQ,OAAO,EAAE,EADL;IAEJC,UAAU,EAAE;EAFR,CADyB;EAK/BR,KAAK,EAAE;IACLS,aAAa,EAAE,WADV;IAELC,QAAQ,EAAE,EAFL;IAGLC,UAAU,EAAE,MAHP;IAILC,MAAM,EAAE;EAJH,CALwB;EAW/BC,IAAI,EAAC;IACHC,KAAK,EAAE,MADJ;IAEHC,cAAc,EAAE;EAFb,CAX0B;EAe/BC,IAAI,EAAC;IACHF,KAAK,EAAE;EADJ;AAf0B,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}